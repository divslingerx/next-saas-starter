import { describe, it, expect } from 'vitest';
import { greet, wait, Example } from './example';

describe('greet', () => {
  it('should return a greeting message', () => {
    const result = greet('World');
    expect(result).toBe('Hello, World!');
  });

  it('should handle empty string', () => {
    const result = greet('');
    expect(result).toBe('Hello, !');
  });
});

describe('wait', () => {
  it('should wait for the specified delay', async () => {
    const start = Date.now();
    await wait(100);
    const elapsed = Date.now() - start;
    
    // Allow some variance in timing
    expect(elapsed).toBeGreaterThanOrEqual(90);
    expect(elapsed).toBeLessThan(150);
  });
});

describe('Example', () => {
  it('should initialize with a value', () => {
    const example = new Example('initial');
    expect(example.getValue()).toBe('initial');
  });

  it('should update the value', () => {
    const example = new Example('initial');
    example.setValue('updated');
    expect(example.getValue()).toBe('updated');
  });
});